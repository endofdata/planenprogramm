// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Planenprogramm;

namespace Planenprogramm.Migrations
{
    [DbContext(typeof(Database))]
    [Migration("20220710131141_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.17");

            modelBuilder.Entity("Planenprogramm.Tarp", b =>
                {
                    b.Property<int>("TarpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Annotation")
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TarpCategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TarpTypeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("TarpId");

                    b.HasIndex("TarpCategoryId");

                    b.HasIndex("TarpTypeId");

                    b.ToTable("Tarps");
                });

            modelBuilder.Entity("Planenprogramm.TarpCategory", b =>
                {
                    b.Property<int>("TarpCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Additional")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Length")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("TarpTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Width")
                        .HasColumnType("INTEGER");

                    b.HasKey("TarpCategoryId");

                    b.HasIndex("TarpTypeId");

                    b.ToTable("TarpCategories");
                });

            modelBuilder.Entity("Planenprogramm.TarpType", b =>
                {
                    b.Property<int>("TarpTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("TarpTypeId");

                    b.ToTable("TarpTypes");
                });

            modelBuilder.Entity("Planenprogramm.Tarp", b =>
                {
                    b.HasOne("Planenprogramm.TarpCategory", "TarpCategory")
                        .WithMany("Tarps")
                        .HasForeignKey("TarpCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Planenprogramm.TarpType", "TarpType")
                        .WithMany("Tarps")
                        .HasForeignKey("TarpTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TarpCategory");

                    b.Navigation("TarpType");
                });

            modelBuilder.Entity("Planenprogramm.TarpCategory", b =>
                {
                    b.HasOne("Planenprogramm.TarpType", "TarpType")
                        .WithMany()
                        .HasForeignKey("TarpTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TarpType");
                });

            modelBuilder.Entity("Planenprogramm.TarpCategory", b =>
                {
                    b.Navigation("Tarps");
                });

            modelBuilder.Entity("Planenprogramm.TarpType", b =>
                {
                    b.Navigation("Tarps");
                });
#pragma warning restore 612, 618
        }
    }
}
